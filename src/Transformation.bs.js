// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Tuple = require("./Tuple.bs.js");
var Matrix4D = require("./Matrix4D.bs.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

function identity(param) {
  return Matrix4D.identityMatrix(/* () */0);
}

function translation(t, x, y, z) {
  var matrix = Matrix4D.identityMatrix(/* () */0);
  Matrix4D.setUnsafe(matrix, x, 0, 3);
  Matrix4D.setUnsafe(matrix, y, 1, 3);
  Matrix4D.setUnsafe(matrix, z, 2, 3);
  return Matrix4D.multiply(matrix, t);
}

function scaling(t, x, y, z) {
  var matrix = Matrix4D.identityMatrix(/* () */0);
  Matrix4D.setUnsafe(matrix, x, 0, 0);
  Matrix4D.setUnsafe(matrix, y, 1, 1);
  Matrix4D.setUnsafe(matrix, z, 2, 2);
  return Matrix4D.multiply(matrix, t);
}

function rotationX(t, radians) {
  var matrix = Matrix4D.identityMatrix(/* () */0);
  Matrix4D.setUnsafe(matrix, Math.cos(radians), 1, 1);
  Matrix4D.setUnsafe(matrix, Math.sin(radians), 2, 1);
  Matrix4D.setUnsafe(matrix, -Math.sin(radians), 1, 2);
  Matrix4D.setUnsafe(matrix, Math.cos(radians), 2, 2);
  return Matrix4D.multiply(matrix, t);
}

function rotationY(t, radians) {
  var matrix = Matrix4D.identityMatrix(/* () */0);
  Matrix4D.setUnsafe(matrix, Math.cos(radians), 0, 0);
  Matrix4D.setUnsafe(matrix, Math.sin(radians), 0, 2);
  Matrix4D.setUnsafe(matrix, -Math.sin(radians), 2, 0);
  Matrix4D.setUnsafe(matrix, Math.cos(radians), 2, 2);
  return Matrix4D.multiply(matrix, t);
}

function rotationZ(t, radians) {
  var matrix = Matrix4D.identityMatrix(/* () */0);
  Matrix4D.setUnsafe(matrix, Math.cos(radians), 0, 0);
  Matrix4D.setUnsafe(matrix, Math.sin(radians), 1, 0);
  Matrix4D.setUnsafe(matrix, -Math.sin(radians), 0, 1);
  Matrix4D.setUnsafe(matrix, Math.cos(radians), 1, 1);
  return Matrix4D.multiply(matrix, t);
}

function shearing(t, xy, xz, yx, yz, zx, zy) {
  var matrix = Matrix4D.identityMatrix(/* () */0);
  Matrix4D.setUnsafe(matrix, xy, 0, 1);
  Matrix4D.setUnsafe(matrix, xz, 0, 2);
  Matrix4D.setUnsafe(matrix, yx, 1, 0);
  Matrix4D.setUnsafe(matrix, yz, 1, 2);
  Matrix4D.setUnsafe(matrix, zx, 2, 0);
  Matrix4D.setUnsafe(matrix, zy, 2, 1);
  return Matrix4D.multiply(matrix, t);
}

var applyTo = Matrix4D.multiplyTuple;

var transform = translation(Matrix4D.identityMatrix(/* () */0), 5, -3, 2);

var point = Tuple.makePoint(-3, 4, 5);

if (!Tuple.equals(Matrix4D.multiplyTuple(transform, point), Tuple.makePoint(2, 1, 7))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          78,
          2
        ]
      ];
}

var transform$1 = translation(Matrix4D.identityMatrix(/* () */0), 5, -3, 2);

var inv = Matrix4D.inverseUnsafe(transform$1);

var point$1 = Tuple.makePoint(-3, 4, 5);

if (!Tuple.equals(Matrix4D.multiplyTuple(inv, point$1), Tuple.makePoint(-8, 7, 3))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          88,
          2
        ]
      ];
}

var transform$2 = translation(Matrix4D.identityMatrix(/* () */0), 5, -3, 2);

var vector = Tuple.makeVector(-3, 4, 5);

if (!Tuple.equals(Matrix4D.multiplyTuple(transform$2, vector), vector)) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          96,
          2
        ]
      ];
}

var transform$3 = scaling(Matrix4D.identityMatrix(/* () */0), 2, 3, 4);

var point$2 = Tuple.makePoint(-4, 6, 8);

if (!Tuple.equals(Matrix4D.multiplyTuple(transform$3, point$2), Tuple.makePoint(-8, 18, 32))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          104,
          2
        ]
      ];
}

var transform$4 = scaling(Matrix4D.identityMatrix(/* () */0), 2, 3, 4);

var vector$1 = Tuple.makeVector(-4, 6, 8);

if (!Tuple.equals(Matrix4D.multiplyTuple(transform$4, vector$1), Tuple.makeVector(-8, 18, 32))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          112,
          2
        ]
      ];
}

var transform$5 = scaling(Matrix4D.identityMatrix(/* () */0), 2, 3, 4);

var inv$1 = Matrix4D.inverseUnsafe(transform$5);

var vector$2 = Tuple.makeVector(-4, 6, 8);

if (!Tuple.equals(Matrix4D.multiplyTuple(inv$1, vector$2), Tuple.makeVector(-2, 2, 2))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          124,
          2
        ]
      ];
}

var transform$6 = scaling(Matrix4D.identityMatrix(/* () */0), -1, 1, 1);

var point$3 = Tuple.makePoint(2, 3, 4);

if (!Tuple.equals(Matrix4D.multiplyTuple(transform$6, point$3), Tuple.makePoint(-2, 3, 4))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          132,
          2
        ]
      ];
}

var point$4 = Tuple.makePoint(0, 1, 0);

var halfQuarter = rotationX(Matrix4D.identityMatrix(/* () */0), Math.PI / 4);

var fullQuarter = rotationX(Matrix4D.identityMatrix(/* () */0), Math.PI / 2);

if (!Tuple.equals(Matrix4D.multiplyTuple(halfQuarter, point$4), Tuple.makePoint(0, Math.sqrt(2) / 2, Math.sqrt(2) / 2))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          141,
          2
        ]
      ];
}

if (!Tuple.equals(Matrix4D.multiplyTuple(fullQuarter, point$4), Tuple.makePoint(0, 0, 1))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          145,
          2
        ]
      ];
}

var point$5 = Tuple.makePoint(0, 1, 0);

var halfQuarter$1 = rotationX(Matrix4D.identityMatrix(/* () */0), Math.PI / 4);

var inv$2 = Matrix4D.inverseUnsafe(halfQuarter$1);

if (!Tuple.equals(Matrix4D.multiplyTuple(inv$2, point$5), Tuple.makePoint(0, Math.sqrt(2) / 2, -Math.sqrt(2) / 2))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          155,
          2
        ]
      ];
}

var point$6 = Tuple.makePoint(0, 0, 1);

var halfQuarter$2 = rotationY(Matrix4D.identityMatrix(/* () */0), Math.PI / 4);

var fullQuarter$1 = rotationY(Matrix4D.identityMatrix(/* () */0), Math.PI / 2);

if (!Tuple.equals(Matrix4D.multiplyTuple(halfQuarter$2, point$6), Tuple.makePoint(Math.sqrt(2) / 2, 0, Math.sqrt(2) / 2))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          167,
          2
        ]
      ];
}

if (!Tuple.equals(Matrix4D.multiplyTuple(fullQuarter$1, point$6), Tuple.makePoint(1, 0, 0))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          172,
          2
        ]
      ];
}

var point$7 = Tuple.makePoint(0, 1, 0);

var halfQuarter$3 = rotationZ(Matrix4D.identityMatrix(/* () */0), Math.PI / 4);

var fullQuarter$2 = rotationZ(Matrix4D.identityMatrix(/* () */0), Math.PI / 2);

if (!Tuple.equals(Matrix4D.multiplyTuple(halfQuarter$3, point$7), Tuple.makePoint(-Math.sqrt(2) / 2, Math.sqrt(2) / 2, 0))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          181,
          2
        ]
      ];
}

if (!Tuple.equals(Matrix4D.multiplyTuple(fullQuarter$2, point$7), Tuple.makePoint(-1, 0, 0))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          186,
          2
        ]
      ];
}

var transform$7 = shearing(Matrix4D.identityMatrix(/* () */0), 1, 0, 0, 0, 0, 0);

var point$8 = Tuple.makePoint(2, 3, 4);

if (!Tuple.equals(Matrix4D.multiplyTuple(transform$7, point$8), Tuple.makePoint(5, 3, 4))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          195,
          2
        ]
      ];
}

var transform$8 = shearing(Matrix4D.identityMatrix(/* () */0), 0, 1, 0, 0, 0, 0);

var point$9 = Tuple.makePoint(2, 3, 4);

if (!Tuple.equals(Matrix4D.multiplyTuple(transform$8, point$9), Tuple.makePoint(6, 3, 4))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          204,
          2
        ]
      ];
}

var transform$9 = shearing(Matrix4D.identityMatrix(/* () */0), 0, 0, 1, 0, 0, 0);

var point$10 = Tuple.makePoint(2, 3, 4);

if (!Tuple.equals(Matrix4D.multiplyTuple(transform$9, point$10), Tuple.makePoint(2, 5, 4))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          213,
          2
        ]
      ];
}

var transform$10 = shearing(Matrix4D.identityMatrix(/* () */0), 0, 0, 0, 1, 0, 0);

var point$11 = Tuple.makePoint(2, 3, 4);

if (!Tuple.equals(Matrix4D.multiplyTuple(transform$10, point$11), Tuple.makePoint(2, 7, 4))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          222,
          2
        ]
      ];
}

var transform$11 = shearing(Matrix4D.identityMatrix(/* () */0), 0, 0, 0, 0, 1, 0);

var point$12 = Tuple.makePoint(2, 3, 4);

if (!Tuple.equals(Matrix4D.multiplyTuple(transform$11, point$12), Tuple.makePoint(2, 3, 6))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          231,
          2
        ]
      ];
}

var transform$12 = shearing(Matrix4D.identityMatrix(/* () */0), 0, 0, 0, 0, 1, 0);

var point$13 = Tuple.makePoint(2, 3, 4);

if (!Tuple.equals(Matrix4D.multiplyTuple(transform$12, point$13), Tuple.makePoint(2, 3, 6))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          240,
          2
        ]
      ];
}

var transform$13 = shearing(Matrix4D.identityMatrix(/* () */0), 0, 0, 0, 0, 0, 1);

var point$14 = Tuple.makePoint(2, 3, 4);

if (!Tuple.equals(Matrix4D.multiplyTuple(transform$13, point$14), Tuple.makePoint(2, 3, 7))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          249,
          2
        ]
      ];
}

var point$15 = Tuple.makePoint(1, 0, 1);

var a = rotationX(Matrix4D.identityMatrix(/* () */0), Math.PI / 2);

var b = scaling(Matrix4D.identityMatrix(/* () */0), 5, 5, 5);

var c = translation(Matrix4D.identityMatrix(/* () */0), 10, 5, 7);

var point2 = Matrix4D.multiplyTuple(a, point$15);

if (!Tuple.equals(point2, Tuple.makePoint(1, -1, 0))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          261,
          2
        ]
      ];
}

var point3 = Matrix4D.multiplyTuple(b, point2);

if (!Tuple.equals(point3, Tuple.makePoint(5, -5, 0))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          265,
          2
        ]
      ];
}

var point4 = Matrix4D.multiplyTuple(c, point3);

if (!Tuple.equals(point4, Tuple.makePoint(15, 0, 7))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          269,
          2
        ]
      ];
}

var point$16 = Tuple.makePoint(1, 0, 1);

var t = translation(scaling(rotationX(Matrix4D.identityMatrix(/* () */0), Math.PI / 2), 5, 5, 5), 10, 5, 7);

if (!Tuple.equals(Matrix4D.multiplyTuple(t, point$16), Tuple.makePoint(15, 0, 7))) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "Transformation.ml",
          276,
          2
        ]
      ];
}

exports.identity = identity;
exports.translation = translation;
exports.scaling = scaling;
exports.rotationX = rotationX;
exports.rotationY = rotationY;
exports.rotationZ = rotationZ;
exports.shearing = shearing;
exports.applyTo = applyTo;
/* transform Not a pure module */
